{"version":3,"file":"camera.min.js","sources":["../src/camera.js"],"sourcesContent":["/**\n * Saves the image and ...\n * @param {video} video - The camera feedback\n * @param {canvas} canvas - The canvas where the image will be temporally saved\n * @returns Nothing\n */\nfunction save_image(video, canvas) {\n    canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n    // let image_data_url = canvas.toDataURL('image/jpeg');\n    // window.alert(image_data_url);\n}\n\nexport const init = (timer) => {\n    let video = document.querySelector(\"#camera\");\n    let canvas = document.querySelector(\"#canvas\");\n    let save_button = document.querySelector(\"#save_button\");\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false }).then((stream) => {\n        video.srcObject = stream;\n        video.play();\n    }).catch((error) => window.alert(error));\n\n    save_button.addEventListener('click', function() {\n        save_image(video, canvas);\n    });\n\n    setInterval(save_image, timer, video, canvas);\n    // window.alert(\"The init function was called\");\n    // video.srcObject = stream;\n    // canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n    // let image_data_url = canvas.toDataURL('image/jpeg');\n};\n"],"names":["save_image","video","canvas","getContext","drawImage","width","height","_exports","init","timer","document","querySelector","save_button","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","error","window","alert","addEventListener","setInterval"],"mappings":"mEAMA,SAASA,WAAWC,MAAOC,QACvBA,OAAOC,WAAW,MAAMC,UAAUH,MAAO,EAAG,EAAGC,OAAOG,MAAOH,OAAOI,OAGxE,8EAqBEC,SAAAC,KAnBmBC,QACjB,IAAIR,MAAQS,SAASC,cAAc,WAC/BT,OAASQ,SAASC,cAAc,WAChCC,YAAcF,SAASC,cAAc,gBAEzCE,UAAUC,aAAaC,aAAa,CAAEd,OAAO,EAAMe,OAAO,IAASC,MAAMC,SACrEjB,MAAMkB,UAAYD,OAClBjB,MAAMmB,MAAM,IACbC,OAAOC,OAAUC,OAAOC,MAAMF,SAEjCV,YAAYa,iBAAiB,SAAS,WAClCzB,WAAWC,MAAOC,OACtB,IAEAwB,YAAY1B,WAAYS,MAAOR,MAAOC,OAAO,CAK/C"}